//
//  Singleton.swift
//  PatternDesign
//
//  Created by Алексей on 26.03.2018.
//  Copyright © 2018 Алексей. All rights reserved.
//

//+«Гарантирует наличие единственного экземпляра класса.
//+Предоставляет к нему глобальную точку доступа.
//+Реализует отложенную инициализацию объекта-одиночки.
//-Нарушает принцип единственной ответственности класса.
//-Маскирует плохой дизайн.
//-Проблемы мультипоточности.
//-Требует постоянного создания Mock-объектов при юнит-тестирования.

//Отрывок из книги: Александр Швец. «Погружение в Паттерны Проектирования». iBooks.

import Foundation

class Singleton: Comparison {
    static var shared = Singleton()
    
    private override init(){
        print("create Singleton")
    }
}
